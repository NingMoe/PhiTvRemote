import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.phicomm.remotecontrol"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0.2005"
        buildConfigField "String", "LOG_TAG", "\"phicomm\""
        multiDexEnabled true
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    productFlavors {
        // qa channel
        qa {
            manifestPlaceholders = [APP_CHANNEL_VALUE: "qa"]
        }

        // for QR code download channel
        "1PTR" {
            manifestPlaceholders = [APP_CHANNEL_VALUE: "1PTR"]
        }
    }
    // rename output file
//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def oldOutputApkFile = output.outputFile
//            def newOutputApkName = oldOutputApkFile.name.replace("app", "PhiBoxRemote_" + defaultConfig.versionName + "_${releaseTime()}")
//            def newOutputApkFile = new File(rootProject.projectDir.absolutePath + "/PhiBoxRemote_${android.defaultConfig.versionName}" + "/", newOutputApkName)
//            output.outputFile = newOutputApkFile
//        }
//    }
}

def releaseTime() {
    return new SimpleDateFormat("yyyyMMddHH").format(new Date())
}

greendao {
    schemaVersion 2 //数据库schema版本，也可以理解为数据库版本号
    daoPackage 'com.phicomm.remotecontrol.greendao.gen'  //设置DaoMaster、DaoSession、Dao包名
    targetGenDir 'src/main/java' //设置DaoMaster、DaoSession、Dao目录
}

dependencies {
     //fileTree
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // butterknife
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    // android support
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'

    // greendao
    compile 'org.greenrobot:greendao:3.0.1'
    compile 'org.greenrobot:greendao-generator:3.0.0'

    // guava
    compile 'com.google.guava:guava:20.0'

    // rxjava
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'

    // gson
    compile 'com.google.code.gson:gson:2.8.0'

    // okhttp
    compile 'com.squareup.okhttp3:okhttp:3.8.1'

    // universalimageloader
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    //retrofit

    compile 'com.squareup.retrofit2:retrofit:2.1.0'

    //gson converter for retrofit
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    //rxjava converter for retrofit
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

    testCompile 'junit:junit:4.12'

    //Cling
    compile files('libs/Cling-2.0.1.jar')

    // leak canary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'

    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    //phicomm
    compile 'com.phicomm.region:region:1.2'

    compile(name: 'PhiWidgets-1.0', ext: 'aar')

    compile 'joda-time:joda-time:2.8.1'
}
